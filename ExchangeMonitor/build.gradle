/*
 * This build file was auto generated by running the Gradle 'init' task by 'Saravana Kumar M' at '10/23/16 3:05 PM' with Gradle 3.1
 * This generated file contains a sample Java project to get you started. For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */
 
 //Apply the java plugin to add support for Java related tasks
apply plugin: 'java'

//Apply the java plugin to add support for JavaFX related tasks
apply from: "http://dl.bintray.com/content/shemnon/javafx-gradle/8.1.1/javafx.plugin"

sourceCompatibility = 1.8
targetCompatibility = 1.8

//In this section you declare where to find the dependencies of your project
repositories
{
	//Use 'jcenter' for resolving your dependencies. You can declare any Maven/Ivy/file repository here.
	jcenter()
    mavenCentral()
}

javafx
{
	profiles
	{
		//not every possible platform override, but ones that have a known impact
		windows
		{
			//id = 'c533f663-1efd-489f-b910-4c7ec20c7fd0'
			//category = 'JavaFX Demos'
			//Points to JDK and its JavaFX libraries, also declares target runtime JDK
			javaRuntime = 'C:/Program Files/Java/jdk1.8.0_112'
			
			//Application name and ID presented by target OS
			appID 'ExchangeMonitor'
			appName 'ExchangeMonitor Application'
			
			//Main class of application
			mainClass 'com.tc.app.exchangemonitor.main.ExchangeMonitorApplicationMain'
			
			//JVM arguments, system properties, application command line arguments
			jvmArgs = ['-XX:+AggressiveOpts', '-XX:CompileThreshold=1']
			systemProperties = ['prism.disableRegionCaching':'true']
			arguments = ['-l', '--fast']
			
			/*
			//Keystore credentials for signing JAR
			//Generate key: keytool -genkey -alias release -keyalg RSA -keystore keystore.jks -keysize 2048
			releaseKey
			{
				alias = 'release'
				keyPass = getProjectProperty('keyStorePassword')
				keyStore = file("${System.properties['user.home']}/keystore/keystore.jks")
				storePass = getProjectProperty('storePassword')
			}
			
			signingMode 'release'
			*/
			
			//app icons
			icons
			{
			}
		}
		
		macosx
		{
		}
		
		linux
		{
		}
	}
}

//In this section you declare the dependencies for your production and test code
dependencies
{
	//Declare the dependency for your favourite test framework you want to use in your tests.
    //TestNG is also supported by the Gradle Test task. Just change the
    //testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    //'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.4'
    compile 'javax.inject:javax.inject:1'
    compile 'org.hibernate:hibernate-core:5.1.0.Final'
    compile 'org.controlsfx:controlsfx:8.40.12'
    
    //log4j dependency
    compile 'org.apache.logging.log4j:log4j-api:2.5'
    compile 'org.apache.logging.log4j:log4j-core:2.5'
    
    //jtds dependency
    compile 'net.sourceforge.jtds:jtds:1.3.1'
    
    //Google Guava dependency
    compile 'com.google.guava:guava:19.0'
    
    //Apache POI dependency
    compile group: 'org.apache.poi', name: 'poi', version: '3.15'
    
    //Apache POI OOXML dependency
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15'
}

//compileJava.options.fork=true
//compileJava.options.forkOptions.executable="C:\\Program Files\\Java\\jdk1.8.0_112"
//sourceCompatibility = 1.8
//targetCompatibility = 1.8

String getProjectProperty(String propertyName)
{
    project.hasProperty(propertyName) ? project.property(propertyName) : null
}